{
  "info": {
    "_postman_id": "f6e9b4c3-8d7a-4e2b-a1c9-2d3e4f5a6b7c",
    "name": "ParkEase API - Part 2 (Parking Spots)",
    "description": "Collection for testing the ParkEase API endpoints for parking spots",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Parking Spots",
      "item": [
        {
          "name": "Get All Spots",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/spots",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "spots"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "10",
                  "disabled": true
                },
                {
                  "key": "type",
                  "value": "standard",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "available",
                  "disabled": true
                },
                {
                  "key": "sortBy",
                  "value": "name",
                  "disabled": true
                },
                {
                  "key": "sortOrder",
                  "value": "asc",
                  "disabled": true
                }
              ]
            },
            "description": "Get all parking spots with optional filters"
          },
          "response": []
        },
        {
          "name": "Get Spot By ID",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/spots/{{spotId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "spots",
                "{{spotId}}"
              ]
            },
            "description": "Get a specific parking spot by ID"
          },
          "response": []
        },
        {
          "name": "Create Spot",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.data && jsonData.data._id) {",
                  "    pm.environment.set('spotId', jsonData.data._id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Spot A1\",\n    \"location\": \"Level 1, Section A\",\n    \"type\": \"standard\",\n    \"rate\": 5.00,\n    \"status\": \"available\",\n    \"features\": [\"Covered\", \"Security Camera\"],\n    \"description\": \"Standard parking spot near the entrance\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/spots",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "spots"
              ]
            },
            "description": "Create a new parking spot"
          },
          "response": []
        },
        {
          "name": "Update Spot",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Spot A1 Updated\",\n    \"location\": \"Level 1, Section A\",\n    \"type\": \"standard\",\n    \"rate\": 6.00,\n    \"status\": \"available\",\n    \"features\": [\"Covered\", \"Security Camera\", \"Near Elevator\"],\n    \"description\": \"Updated standard parking spot near the entrance\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/spots/{{spotId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "spots",
                "{{spotId}}"
              ]
            },
            "description": "Update a parking spot"
          },
          "response": []
        },
        {
          "name": "Update Spot Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"maintenance\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/spots/{{spotId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "spots",
                "{{spotId}}",
                "status"
              ]
            },
            "description": "Update a parking spot's status"
          },
          "response": []
        },
        {
          "name": "Get Nearby Spots",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/spots/nearby/37.7749/-122.4194?radius=1000&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "spots",
                "nearby",
                "37.7749",
                "-122.4194"
              ],
              "query": [
                {
                  "key": "radius",
                  "value": "1000"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get nearby parking spots based on coordinates"
          },
          "response": []
        },
        {
          "name": "Delete Spot",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/spots/{{spotId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "spots",
                "{{spotId}}"
              ]
            },
            "description": "Delete a parking spot"
          },
          "response": []
        }
      ],
      "description": "Parking spots endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5002",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "spotId",
      "value": "",
      "type": "string"
    }
  ]
}